//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "String.h"




//############################################################################
//                                                                          
//                           Class String                           
//                                                                           
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================

//Default constructor
String::String(void)
{
  string = NULL;
  size = 0;	
  capacity= 0;	
}


//Constructor from a c-string
String::String(char * stringToAppend)
{
  string = stringToAppend;
  size = 0;	
  capacity= 0;
}

//Copy constructor
String::String(const String& str)
{
  string=str.string;
  size=str.size;
  capacity=str.capacity;
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
String::~String(void)
{
  delete string;
  string = NULL;
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================
<<<<<<< HEAD
char * String::c_str(void) const
=======


void String :: Reserve (size_t n)
{
  if(capacity<n) {
    capacity=n;
  }
  printf("%d \n", capacity);

}


char * String::c_str(void)
>>>>>>> b72b1f38d2296873e873d288e7bbef1ff3e0694b
{
	return string;
}

// ===========================================================================
//                                Protected Methods
// ===========================================================================

// ===========================================================================
//                               Non inline accessors
// ===========================================================================
